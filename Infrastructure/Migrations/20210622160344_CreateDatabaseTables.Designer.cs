// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(CabsBookingDbContext))]
    [Migration("20210622160344_CreateDatabaseTables")]
    partial class CreateDatabaseTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OmerCemSevim.CabsBooking.ApplicationCore.Entities.Bookings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BookingTime")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("CabTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FromPlace")
                        .HasColumnType("int");

                    b.Property<int?>("FromPlacesPlaceId")
                        .HasColumnType("int");

                    b.Property<string>("Landmark")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PickupAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("PickupDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PickupTime")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Status")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ToPlaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CabTypeId");

                    b.HasIndex("FromPlacesPlaceId");

                    b.HasIndex("ToPlaceId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("OmerCemSevim.CabsBooking.ApplicationCore.Entities.BookingsHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BookingTime")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("CabTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Charge")
                        .HasColumnType("money");

                    b.Property<string>("CompTime")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Feedback")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("FromPlace")
                        .HasColumnType("int");

                    b.Property<int?>("FromPlacesPlaceId")
                        .HasColumnType("int");

                    b.Property<string>("Landmark")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PickupAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("PickupDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PickupTime")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Status")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ToPlaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CabTypeId");

                    b.HasIndex("FromPlacesPlaceId");

                    b.HasIndex("ToPlaceId");

                    b.ToTable("Bookings history");
                });

            modelBuilder.Entity("OmerCemSevim.CabsBooking.ApplicationCore.Entities.CabTypes", b =>
                {
                    b.Property<int>("CabTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CabTypeName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CabTypeId");

                    b.ToTable("CabTypes");
                });

            modelBuilder.Entity("OmerCemSevim.CabsBooking.ApplicationCore.Entities.Places", b =>
                {
                    b.Property<int>("PlaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PlaceName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("PlaceId");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("OmerCemSevim.CabsBooking.ApplicationCore.Entities.Bookings", b =>
                {
                    b.HasOne("OmerCemSevim.CabsBooking.ApplicationCore.Entities.CabTypes", "CabType")
                        .WithMany("Bookings")
                        .HasForeignKey("CabTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OmerCemSevim.CabsBooking.ApplicationCore.Entities.Places", "FromPlaces")
                        .WithMany()
                        .HasForeignKey("FromPlacesPlaceId");

                    b.HasOne("OmerCemSevim.CabsBooking.ApplicationCore.Entities.Places", "ToPlace")
                        .WithMany("Bookings")
                        .HasForeignKey("ToPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CabType");

                    b.Navigation("FromPlaces");

                    b.Navigation("ToPlace");
                });

            modelBuilder.Entity("OmerCemSevim.CabsBooking.ApplicationCore.Entities.BookingsHistory", b =>
                {
                    b.HasOne("OmerCemSevim.CabsBooking.ApplicationCore.Entities.CabTypes", "CabType")
                        .WithMany("BookingsHistories")
                        .HasForeignKey("CabTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OmerCemSevim.CabsBooking.ApplicationCore.Entities.Places", "FromPlaces")
                        .WithMany()
                        .HasForeignKey("FromPlacesPlaceId");

                    b.HasOne("OmerCemSevim.CabsBooking.ApplicationCore.Entities.Places", "ToPlace")
                        .WithMany("BookingsHistories")
                        .HasForeignKey("ToPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CabType");

                    b.Navigation("FromPlaces");

                    b.Navigation("ToPlace");
                });

            modelBuilder.Entity("OmerCemSevim.CabsBooking.ApplicationCore.Entities.CabTypes", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("BookingsHistories");
                });

            modelBuilder.Entity("OmerCemSevim.CabsBooking.ApplicationCore.Entities.Places", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("BookingsHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
